{"version":3,"file":"gundb-react-hooks.umd.js","sources":["../../src/index.ts"],"sourcesContent":["import { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type ActionType = {\n  type: string;\n  data: any;\n};\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport interface GunOptions\n  extends Partial<{\n    file: string;\n    web: any;\n    s3: {\n      key: any;\n      secret: any;\n      bucket: any;\n    };\n    peers: string[] | Record<string, {}>;\n    radisk: boolean;\n    localStorage: boolean;\n    uuid(): string;\n    [key: string]: any;\n  }> {}\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (dispatcher, timeout = 100) => {\n  let updates: any[] = [];\n  let handler;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce((previousState, { id, data }) => {\n          previousState[id] = data;\n          return previousState;\n        }, {});\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const reducer = (state: {}, { data, type }: ActionType) => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'update':\n      return { ...state, [data.nodeID]: data };\n    case 'remove':\n      delete state[data];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport const useSafeReducer = <T>(reducer, initialState): [T, Function] => {\n  const [state, dispatch] = useReducer<T>(reducer, initialState);\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, opts: GunOptions) => {\n  const [gun, setGun] = useState(Gun({ ...opts }));\n\n  useEffect(() => {\n    if (opts) {\n      setGun(Gun({ ...opts }));\n    }\n  }, [Gun, opts]);\n\n  return gun;\n};\n\nexport const useGunNamespace = (gun: GunRef, soul?: string) => {\n  const [namespace, setNamespace] = useState(\n    soul ? gun.user(soul) : gun.user()\n  );\n  useEffect(() => {\n    if (gun && !namespace) {\n      setNamespace(soul ? gun.user(soul) : gun.user());\n    }\n  }, [namespace, gun, soul]);\n  return namespace;\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const namespacedGraph = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (\n  sea: any,\n  existingKeys?: KeyPair | undefined | null\n) => {\n  const [newKeys, setNewKeys] = useState<KeyPair | undefined | null>(\n    existingKeys\n  );\n\n  useEffect(() => {\n    async function getKeySet() {\n      const pair: KeyPair = await sea.pair();\n      setNewKeys(pair);\n    }\n\n    if (!newKeys && !existingKeys) {\n      getKeySet();\n    }\n\n    if (existingKeys) {\n      setNewKeys(existingKeys);\n    }\n  }, [existingKeys, newKeys, sea]);\n\n  return newKeys;\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen = false } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedField, nodeID, message, event) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        Object.keys(decryptedField).forEach((key) => {\n          let cleanFn = updater({ id: key, data: decryptedField[key] });\n          debouncedHandlers.push(cleanFn);\n        });\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack) =>\n        ack.err ? reject(ack.err) : resolve(data)\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack) =>\n        ack.err ? reject(ack.err) : resolve(field)\n      )\n    );\n    dispatch({ type: 'remove', data: field });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [collection, dispatch] = useSafeReducer<Record<string, T>>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  // Working with Sets\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedNode, nodeID, message, event) => {\n        let item = await decryptData(encryptedNode, appKeys, sea);\n        if (item) {\n          let cleanFn = updater({\n            id: nodeID,\n            data: { ...item, nodeID },\n          });\n          debouncedHandlers.push(cleanFn);\n        }\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.map().open(gunCb);\n        }\n      } else {\n        gunAppGraph.map().on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack) =>\n            ack.err ? reject(ack.err) : resolve(data)\n          )\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack) => (ack.err ? reject(ack.err) : resolve(nodeID)))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","decryptData","decrypt","debouncedUpdates","dispatcher","timeout","updates","handler","update","push","setTimeout","newStateSlice","reduce","previousState","id","clearTimeout","reducer","state","type","nodeID","Error","useIsMounted","isMounted","useRef","useEffect","current","useSafeReducer","initialState","useReducer","dispatch","safeDispatch","args","useGun","Gun","opts","useState","gun","setGun","useGunNamespace","soul","user","namespace","setNamespace","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","existingKeys","newKeys","setNewKeys","getKeySet","pair","useGunState","ref","appKeys","interval","useOpen","gunAppGraph","fields","debouncedHandlers","updater","gunCb","encryptedField","message","event","decryptedField","Object","forEach","key","cleanFn","open","off","length","c","put","encryptedData","Promise","resolve","reject","ack","err","remove","field","useGunCollectionState","collection","encryptedNode","item","map","updateInSet","get","addToSet","set","removeFromSet"],"mappings":"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"}
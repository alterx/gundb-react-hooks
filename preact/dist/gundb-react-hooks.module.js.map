{"version":3,"file":"gundb-react-hooks.module.js","sources":["../../src/index.ts"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type NodeT<T> = T & { nodeID: string; [key: string]: any };\n\nexport type ActionType<T> =\n  | { type: 'add'; data: NodeT<T> }\n  | { type: 'update'; data: NodeT<T> }\n  | { type: 'remove'; data: NodeT<T> };\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport interface GunOptions\n  extends Partial<{\n    file: string;\n    web: any;\n    s3: {\n      key: any;\n      secret: any;\n      bucket: any;\n    };\n    peers: string[] | Record<string, {}>;\n    radisk: boolean;\n    localStorage: boolean;\n    uuid(): string;\n    [key: string]: any;\n  }> {}\n\nexport interface CollectionState<T>\n  extends Partial<{\n    collection: Map<string, T>;\n    sorted: T[];\n    infiniteScrolling: {\n      isFetching: boolean;\n      lastFetched: string;\n      reverse: boolean;\n    };\n  }> {}\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (\n  dispatcher: any,\n  type = 'object',\n  timeout = 100\n) => {\n  let updates: any[] = [];\n  let handler: any;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce(\n          (previousState, { id, data }) => {\n            if (type === 'object') {\n              previousState[id] = data;\n            } else {\n              previousState.set(id, data);\n            }\n            return previousState;\n          },\n          type === 'object' ? {} : new Map()\n        );\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport const nodeReducer = <T>(\n  state: NodeT<T>,\n  { data, type }: ActionType<T>\n): T => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'remove':\n      delete state[data.nodeID];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const collectionReducer = <T>(\n  state: CollectionState<T>,\n  { data, type }: ActionType<T>\n): CollectionState<T> => {\n  switch (type) {\n    case 'add':\n      data.forEach((data: NodeT<T>) => {\n        state.collection?.set(data.nodeID, data);\n      });\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'update':\n      state.collection?.set(data.nodeID, data);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'remove':\n      state.collection?.delete(data.nodeID);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useSafeReducer = <T>(\n  reducer: any,\n  initialState: T\n): [T, Function] => {\n  const [state, dispatch] = useReducer<React.Reducer<T, ActionType<T>>>(\n    reducer,\n    initialState\n  );\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args: ActionType<T>) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, opts: GunOptions) => {\n  const [gun, setGun] = useState(Gun({ ...opts }));\n\n  useEffect(() => {\n    if (opts) {\n      setGun(Gun({ ...opts }));\n    }\n  }, [Gun, opts]);\n\n  return gun;\n};\n\nexport const useGunNamespace = (gun: GunRef, soul?: string) => {\n  const [namespace, setNamespace] = useState(\n    soul ? gun.user(soul) : gun.user()\n  );\n  useEffect(() => {\n    if (gun && !namespace) {\n      setNamespace(soul ? gun.user(soul) : gun.user());\n    }\n  }, [namespace, gun, soul]);\n  return namespace;\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const namespacedGraph = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (\n  sea: any,\n  existingKeys?: KeyPair | undefined | null\n) => {\n  const [newKeys, setNewKeys] = useState<KeyPair | undefined | null>(\n    existingKeys\n  );\n\n  useEffect(() => {\n    async function getKeySet() {\n      const pair: KeyPair = await sea.pair();\n      setNewKeys(pair);\n    }\n\n    if (!newKeys && !existingKeys) {\n      getKeySet();\n    }\n\n    if (existingKeys) {\n      setNewKeys(existingKeys);\n    }\n  }, [existingKeys, newKeys, sea]);\n\n  return newKeys;\n};\n\nexport const useGunOnNodeUpdated = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    useOpen: false,\n  },\n  cb: (data: T, nodeID: string) => void,\n  cleanup?: () => void\n) => {\n  const { appKeys, sea, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const gunCb = async (\n        encryptedField: any,\n        nodeID: string,\n        message: any,\n        event: any\n      ) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        cb(decryptedField, nodeID);\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (cleanup) {\n        cleanup();\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(nodeReducer, {} as T);\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: any) => {\n      dispatch({ type: 'add', data });\n    },\n    'object',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    gunAppGraph,\n    opts,\n    (item: any) => {\n      Object.keys(item).forEach((key) => {\n        let cleanFn = updater({ id: key, data: item[key] });\n        debouncedHandlers.push(cleanFn);\n      });\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack: any) =>\n        ack.err ? reject(ack.err) : resolve(data)\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack: any) =>\n        ack.err ? reject(ack.err) : resolve(field)\n      )\n    );\n    dispatch({ type: 'remove', data: { nodeID: field } });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [{ collection }, dispatch] = useSafeReducer<CollectionState<T>>(\n    collectionReducer,\n    {\n      collection: new Map(),\n    }\n  );\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: T) => {\n      dispatch({ type: 'add', data });\n    },\n    'map',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    gunAppGraph.map(),\n    opts,\n    (item: T, nodeID) => {\n      if (item) {\n        let cleanFn = updater({\n          id: nodeID,\n          data: { ...item, nodeID },\n        });\n        debouncedHandlers.push(cleanFn);\n      } else {\n        dispatch({ type: 'remove', data: { nodeID } });\n      }\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with Sets\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack: any) =>\n            ack.err ? reject(ack.err) : resolve(data)\n          )\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack: any) => (ack.err ? reject(ack.err) : resolve(nodeID)))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","decryptData","decrypt","debouncedUpdates","dispatcher","type","timeout","updates","handler","update","push","setTimeout","newStateSlice","reduce","previousState","id","set","Map","clearTimeout","useIsMounted","isMounted","useRef","useEffect","current","nodeReducer","state","nodeID","Error","collectionReducer","forEach","collection","useSafeReducer","reducer","initialState","useReducer","dispatch","safeDispatch","args","useGun","Gun","opts","useState","gun","setGun","useGunNamespace","soul","user","namespace","setNamespace","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","existingKeys","newKeys","setNewKeys","getKeySet","pair","useGunOnNodeUpdated","ref","cb","cleanup","appKeys","useOpen","gunAppGraph","gunCb","encryptedField","message","event","decryptedField","open","off","useGunState","interval","fields","debouncedHandlers","updater","item","Object","key","cleanFn","length","c","put","encryptedData","Promise","resolve","reject","ack","err","remove","field","useGunCollectionState","map","updateInSet","get","addToSet","removeFromSet"],"mappings":"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"}
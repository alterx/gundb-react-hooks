{"version":3,"file":"gundb-react-hooks.js","sources":["../../src/index.ts"],"sourcesContent":["import { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type ActionType = {\n  type: string;\n  data: any;\n};\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport interface GunOptions\n  extends Partial<{\n    file: string;\n    web: any;\n    s3: {\n      key: any;\n      secret: any;\n      bucket: any;\n    };\n    peers: string[] | Record<string, {}>;\n    radisk: boolean;\n    localStorage: boolean;\n    uuid(): string;\n    [key: string]: any;\n  }> {}\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (dispatcher, timeout = 100) => {\n  let updates: any[] = [];\n  let handler;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce((previousState, { id, data }) => {\n          previousState[id] = data;\n          return previousState;\n        }, {});\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const reducer = (state: {}, { data, type }: ActionType) => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'update':\n      return { ...state, [data.nodeID]: data };\n    case 'remove':\n      delete state[data];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport const useSafeReducer = <T>(reducer, initialState): [T, Function] => {\n  const [state, dispatch] = useReducer<T>(reducer, initialState);\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, opts: GunOptions) => {\n  const [gun] = useState(Gun(opts));\n\n  return [gun];\n};\n\nexport const useGunNamespace = (gun: GunRef) => {\n  const [namespace, setNamespace] = useState(null);\n  if (!namespace) {\n    setNamespace(gun.user());\n  }\n  return [namespace];\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const [namespacedGraph] = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (sea: any, initialValue: any) => {\n  const [keys, setKeys] = useState(initialValue);\n\n  async function getKeySet() {\n    const pair: KeyPair = await sea.pair();\n    setKeys(pair);\n  }\n\n  if (!keys) {\n    getKeySet();\n  }\n\n  return [keys, setKeys];\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen = false } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedField, nodeID, message, event) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        Object.keys(decryptedField).forEach((key) => {\n          let cleanFn = updater({ id: key, data: decryptedField[key] });\n          debouncedHandlers.push(cleanFn);\n        });\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack) =>\n        ack.err ? reject(ack.err) : resolve()\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'remove', data: field });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [collection, dispatch] = useSafeReducer<Record<string, T>>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  // Working with Sets\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedNode, nodeID, message, event) => {\n        let item = await decryptData(encryptedNode, appKeys, sea);\n        if (item) {\n          let cleanFn = updater({\n            id: nodeID,\n            data: { ...item, nodeID },\n          });\n          debouncedHandlers.push(cleanFn);\n        }\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.map().open(gunCb);\n        }\n      } else {\n        gunAppGraph.map().on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack) =>\n          ack.err ? reject(ack.err) : resolve()\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","decryptData","decrypt","debouncedUpdates","dispatcher","timeout","updates","handler","update","push","setTimeout","newStateSlice","reduce","previousState","id","clearTimeout","reducer","state","type","nodeID","Error","useIsMounted","isMounted","useRef","useEffect","current","useSafeReducer","initialState","useReducer","dispatch","safeDispatch","args","useGun","Gun","opts","useState","gun","useGunNamespace","namespace","setNamespace","user","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","initialValue","getKeySet","pair","setKeys","useGunState","ref","appKeys","interval","useOpen","gunAppGraph","fields","debouncedHandlers","updater","gunCb","encryptedField","message","event","decryptedField","Object","forEach","key","cleanFn","open","off","length","c","put","encryptedData","Promise","resolve","reject","ack","err","remove","field","useGunCollectionState","collection","encryptedNode","item","map","updateInSet","get","addToSet","set","removeFromSet"],"mappings":"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"}
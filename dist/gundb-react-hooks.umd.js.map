{"version":3,"file":"gundb-react-hooks.umd.js","sources":["../src/index.ts"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type NodeT<T> = T & { nodeID: string; [key: string]: any };\n\nexport type ActionType<T> =\n  | { type: 'add'; data: NodeT<T> }\n  | { type: 'update'; data: NodeT<T> }\n  | { type: 'remove'; data: NodeT<T> };\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport interface GunOptions\n  extends Partial<{\n    file: string;\n    web: any;\n    s3: {\n      key: any;\n      secret: any;\n      bucket: any;\n    };\n    peers: string[] | Record<string, {}>;\n    radisk: boolean;\n    localStorage: boolean;\n    uuid(): string;\n    [key: string]: any;\n  }> {}\n\nexport interface CollectionState<T>\n  extends Partial<{\n    collection: Map<string, T>;\n    sorted: T[];\n    infiniteScrolling: {\n      isFetching: boolean;\n      lastFetched: string;\n      reverse: boolean;\n    };\n  }> {}\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (\n  dispatcher: any,\n  type = 'object',\n  timeout = 100\n) => {\n  let updates: any[] = [];\n  let handler: any;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce(\n          (previousState, { id, data }) => {\n            if (type === 'object') {\n              previousState[id] = data;\n            } else {\n              previousState.set(id, data);\n            }\n            return previousState;\n          },\n          type === 'object' ? {} : new Map()\n        );\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport const nodeReducer = <T>(\n  state: NodeT<T>,\n  { data, type }: ActionType<T>\n): T => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'remove':\n      delete state[data.nodeID];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const collectionReducer = <T>(\n  state: CollectionState<T>,\n  { data, type }: ActionType<T>\n): CollectionState<T> => {\n  switch (type) {\n    case 'add':\n      data.forEach((data: NodeT<T>) => {\n        state.collection?.set(data.nodeID, data);\n      });\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'update':\n      state.collection?.set(data.nodeID, data);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'remove':\n      state.collection?.delete(data.nodeID);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useSafeReducer = <T>(\n  reducer: any,\n  initialState: T\n): [T, Function] => {\n  const [state, dispatch] = useReducer<React.Reducer<T, ActionType<T>>>(\n    reducer,\n    initialState\n  );\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args: ActionType<T>) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, opts: GunOptions) => {\n  const [gun, setGun] = useState(Gun({ ...opts }));\n\n  useEffect(() => {\n    if (opts) {\n      setGun(Gun({ ...opts }));\n    }\n  }, [Gun, opts]);\n\n  return gun;\n};\n\nexport const useGunNamespace = (gun: GunRef, soul?: string) => {\n  const [namespace, setNamespace] = useState(\n    soul ? gun.user(soul) : gun.user()\n  );\n  useEffect(() => {\n    if (gun && !namespace) {\n      setNamespace(soul ? gun.user(soul) : gun.user());\n    }\n  }, [namespace, gun, soul]);\n  return namespace;\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const namespacedGraph = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (\n  sea: any,\n  existingKeys?: KeyPair | undefined | null\n) => {\n  const [newKeys, setNewKeys] = useState<KeyPair | undefined | null>(\n    existingKeys\n  );\n\n  useEffect(() => {\n    async function getKeySet() {\n      const pair: KeyPair = await sea.pair();\n      setNewKeys(pair);\n    }\n\n    if (!newKeys && !existingKeys) {\n      getKeySet();\n    }\n\n    if (existingKeys) {\n      setNewKeys(existingKeys);\n    }\n  }, [existingKeys, newKeys, sea]);\n\n  return newKeys;\n};\n\nexport const useGunOnNodeUpdated = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    useOpen: false,\n  },\n  cb: (data: T, nodeID: string) => void,\n  cleanup?: () => void\n) => {\n  const { appKeys, sea, useOpen } = opts;\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const gunCb = async (\n        encryptedField: any,\n        nodeID: string,\n        message: any,\n        event: any\n      ) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        cb(decryptedField, nodeID);\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!ref.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          ref.open(gunCb);\n        }\n      } else {\n        ref.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (cleanup) {\n        cleanup();\n      }\n    };\n  }, [ref]);\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [fields, dispatch] = useSafeReducer<T>(nodeReducer, {} as T);\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: any) => {\n      dispatch({ type: 'add', data });\n    },\n    'object',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    ref,\n    opts,\n    (item: any) => {\n      Object.keys(item).forEach((key) => {\n        let cleanFn = updater({ id: key, data: item[key] });\n        debouncedHandlers.push(cleanFn);\n      });\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      ref.put(encryptedData, (ack: any) =>\n        ack.err ? reject(ack.err) : resolve(data)\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      ref.put(null, (ack: any) => (ack.err ? reject(ack.err) : resolve(field)))\n    );\n    dispatch({ type: 'remove', data: { nodeID: field } });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [{ collection }, dispatch] = useSafeReducer<CollectionState<T>>(\n    collectionReducer,\n    {\n      collection: new Map(),\n    }\n  );\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: T) => {\n      dispatch({ type: 'add', data });\n    },\n    'map',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    ref.map(),\n    opts,\n    (item: T, nodeID) => {\n      if (item) {\n        let cleanFn = updater({\n          id: nodeID,\n          data: { ...item, nodeID },\n        });\n        debouncedHandlers.push(cleanFn);\n      }\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with Sets\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      ref\n        .get(nodeID)\n        .put(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        ref.set(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        ref\n          .get(nodeID)\n          .put(encryptedData, (ack: any) =>\n            ack.err ? reject(ack.err) : resolve(data)\n          )\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      ref\n        .get(nodeID)\n        .put(null, (ack: any) => (ack.err ? reject(ack.err) : resolve(nodeID)))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","decryptData","decrypt","debouncedUpdates","dispatcher","type","timeout","updates","handler","update","push","setTimeout","newStateSlice","reduce","previousState","id","set","Map","clearTimeout","useIsMounted","isMounted","useRef","useEffect","current","nodeReducer","state","nodeID","Error","collectionReducer","forEach","collection","useSafeReducer","reducer","initialState","useReducer","dispatch","safeDispatch","args","useGun","Gun","opts","useState","gun","setGun","useGunNamespace","soul","user","namespace","setNamespace","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","existingKeys","newKeys","setNewKeys","getKeySet","pair","useGunOnNodeUpdated","ref","cb","cleanup","appKeys","useOpen","gunCb","encryptedField","message","event","decryptedField","open","off","useGunState","interval","fields","debouncedHandlers","updater","item","Object","key","cleanFn","length","c","put","encryptedData","Promise","resolve","reject","ack","err","remove","field","useGunCollectionState","map","updateInSet","get","addToSet","removeFromSet"],"mappings":"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"}
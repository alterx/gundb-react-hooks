{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type ActionType = {\n  type: string;\n  data: any;\n};\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (dispatcher, timeout = 100) => {\n  let updates: any[] = [];\n  let handler;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce((previousState, { id, data }) => {\n          previousState[id] = data;\n          return previousState;\n        }, {});\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const reducer = (state: {}, { data, type }: ActionType) => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'update':\n      return { ...state, [data.nodeID]: data };\n    case 'remove':\n      delete state[data];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport const useSafeReducer = <T>(reducer, initialState): [T, Function] => {\n  const [state, dispatch] = useReducer<T>(reducer, initialState);\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, peerList: string[]) => {\n  const [gun] = useState(\n    Gun({\n      peers: peerList,\n    })\n  );\n\n  return [gun];\n};\n\nexport const useGunNamespace = (gun: GunRef) => {\n  const [namespace, setNamespace] = useState(null);\n  if (!namespace) {\n    setNamespace(gun.user());\n  }\n  return [namespace];\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const [namespacedGraph] = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (sea: any, initialValue: any) => {\n  const [keys, setKeys] = useState(initialValue);\n\n  async function getKeySet() {\n    const pair: KeyPair = await sea.pair();\n    setKeys(pair);\n  }\n\n  if (!keys) {\n    getKeySet();\n  }\n\n  return [keys, setKeys];\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen = false } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedField, nodeID, message, event) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        Object.keys(decryptedField).forEach((key) => {\n          let cleanFn = updater({ id: key, data: decryptedField[key] });\n          debouncedHandlers.push(cleanFn);\n        });\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack) =>\n        ack.err ? reject(ack.err) : resolve()\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'remove', data: field });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [collection, dispatch] = useSafeReducer<Record<string, T>>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  // Working with Sets\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedNode, nodeID, message, event) => {\n        let item = await decryptData(encryptedNode, appKeys, sea);\n        if (item) {\n          let cleanFn = updater({\n            id: nodeID,\n            data: { ...item, nodeID },\n          });\n          debouncedHandlers.push(cleanFn);\n        }\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.map().open(gunCb);\n        }\n      } else {\n        gunAppGraph.map().on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack) =>\n          ack.err ? reject(ack.err) : resolve()\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","decryptData","decrypt","debouncedUpdates","dispatcher","timeout","handler","updates","update","push","setTimeout","newStateSlice","reduce","previousState","id","clearTimeout","reducer","state","type","nodeID","Error","useIsMounted","isMounted","useRef","useEffect","current","useSafeReducer","initialState","useReducer","dispatch","args","useGun","Gun","peerList","useState","peers","useGunNamespace","gun","namespace","setNamespace","user","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","initialValue","setKeys","pair","getKeySet","useGunState","ref","opts","appKeys","interval","useOpen","gunAppGraph","fields","debouncedHandlers","updater","gunCb","encryptedField","message","event","decryptedField","Object","forEach","key","cleanFn","open","off","length","c","put","encryptedData","Promise","resolve","reject","ack","err","remove","field","useGunCollectionState","collection","encryptedNode","item","map","addToSet","get","set","updateInSet","removeFromSet"],"mappings":"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"}
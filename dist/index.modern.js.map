{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type ActionType = {\n  type: string;\n  data: any;\n};\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (dispatcher, timeout = 100) => {\n  let updates: any[] = [];\n  let handler;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce((previousState, { id, data }) => {\n          previousState[id] = data;\n          return previousState;\n        }, {});\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const reducer = (state: {}, { data, type }: ActionType) => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'update':\n      return { ...state, [data.nodeID]: data };\n    case 'remove':\n      delete state[data];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  return isMounted;\n};\n\nexport const useSafeReducer = <T>(reducer, initialState): [T, Function] => {\n  const [state, dispatch] = useReducer<T>(reducer, initialState);\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, peerList: string[]) => {\n  const [gun] = useState(\n    Gun({\n      peers: peerList,\n    })\n  );\n\n  return [gun];\n};\n\nexport const useGunNamespace = (gun: GunRef) => {\n  const [namespace, setNamespace] = useState(null);\n  if (!namespace) {\n    setNamespace(gun.user());\n  }\n  return [namespace];\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const [namespacedGraph] = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (sea: any, initialValue: any) => {\n  const [keys, setKeys] = useState(initialValue);\n\n  async function getKeySet() {\n    const pair: KeyPair = await sea.pair();\n    setKeys(pair);\n  }\n\n  if (!keys) {\n    getKeySet();\n  }\n\n  return [keys, setKeys];\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen = false } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedField, nodeID, message, event) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        Object.keys(decryptedField).forEach((key) => {\n          let cleanFn = updater({ id: key, data: decryptedField[key] });\n          debouncedHandlers.push(cleanFn);\n        });\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack) =>\n        ack.err ? reject(ack.err) : resolve()\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'remove', data: field });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [collection, dispatch] = useSafeReducer<Record<string, T>>(reducer, {});\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  // Working with Sets\n  useEffect(() => {\n    const debouncedHandlers: Function[] = [];\n    if (isMounted.current) {\n      const updater = debouncedUpdates((data) => {\n        dispatch({ type: 'add', data });\n      }, interval);\n\n      const gunCb = async (encryptedNode, nodeID, message, event) => {\n        let item = await decryptData(encryptedNode, appKeys, sea);\n        if (item) {\n          let cleanFn = updater({\n            id: nodeID,\n            data: { ...item, nodeID },\n          });\n          debouncedHandlers.push(cleanFn);\n        }\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.map().open(gunCb);\n        }\n      } else {\n        gunAppGraph.map().on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack) =>\n          ack.err ? reject(ack.err) : resolve()\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack) => (ack.err ? reject(ack.err) : resolve()))\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack) => (ack.err ? reject(ack.err) : resolve()))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","async","data","keys","sea","encrypt","Promise","resolve","decryptData","decrypt","debouncedUpdates","dispatcher","timeout","handler","updates","update","push","setTimeout","newStateSlice","reduce","previousState","id","clearTimeout","reducer","state","type","[object Object]","nodeID","Error","useIsMounted","isMounted","useRef","useEffect","current","useSafeReducer","initialState","dispatch","useReducer","args","useGun","Gun","peerList","gun","useState","peers","useGunNamespace","namespace","setNamespace","user","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","initialValue","setKeys","pair","getKeySet","useGunState","ref","opts","appKeys","interval","useOpen","gunAppGraph","fields","debouncedHandlers","updater","gunCb","encryptedField","message","event","decryptedField","Object","forEach","key","cleanFn","open","off","length","c","put","encryptedData","reject","ack","err","remove","field","useGunCollectionState","collection","encryptedNode","item","map","addToSet","get","set","updateInSet","removeFromSet"],"mappings":"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"}
{"version":3,"file":"gundb-react-hooks.modern.js","sources":["../src/index.ts"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef } from 'react';\n\nexport type GunStatic = any;\n\nexport type GunRef = any;\n\nexport type NamespacedRef = any;\n\nexport type KeyPair = {\n  pub: string;\n  priv: string;\n  epub: string;\n  epriv: string;\n};\n\nexport type Options = {\n  appKeys?: undefined | string | KeyPair;\n  sea?: any;\n  interval?: number;\n  useOpen?: boolean;\n};\n\nexport type NodeT<T> = T & { nodeID: string; [key: string]: any };\n\nexport type ActionType<T> =\n  | { type: 'add'; data: NodeT<T> }\n  | { type: 'update'; data: NodeT<T> }\n  | { type: 'remove'; data: NodeT<T> };\n\nexport type UpdateType = {\n  id: string;\n  data: any;\n};\n\nexport interface GunOptions\n  extends Partial<{\n    file: string;\n    web: any;\n    s3: {\n      key: any;\n      secret: any;\n      bucket: any;\n    };\n    peers: string[] | Record<string, {}>;\n    radisk: boolean;\n    localStorage: boolean;\n    uuid(): string;\n    [key: string]: any;\n  }> {}\n\nexport interface CollectionState<T>\n  extends Partial<{\n    collection: Map<string, T>;\n    sorted: T[];\n    infiniteScrolling: {\n      isFetching: boolean;\n      lastFetched: string;\n      reverse: boolean;\n    };\n  }> {}\n\nexport const encryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.encrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const decryptData = async (\n  data: any,\n  keys: undefined | string | KeyPair,\n  sea: any\n) => {\n  return keys && sea ? sea.decrypt(data, keys) : Promise.resolve(data);\n};\n\nexport const debouncedUpdates = (\n  dispatcher: any,\n  type = 'object',\n  timeout = 100\n) => {\n  let updates: any[] = [];\n  let handler: any;\n  return (update: UpdateType) => {\n    updates.push(update);\n    if (!handler) {\n      handler = setTimeout(() => {\n        let newStateSlice = updates.reduce(\n          (previousState, { id, data }) => {\n            if (type === 'object') {\n              previousState[id] = data;\n            } else {\n              previousState.set(id, data);\n            }\n            return previousState;\n          },\n          type === 'object' ? {} : new Map()\n        );\n        dispatcher(newStateSlice);\n        updates = [];\n        handler = null;\n      }, timeout);\n    }\n\n    return () => {\n      clearTimeout(handler);\n      updates = [];\n      handler = null;\n    };\n  };\n};\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n\nexport const nodeReducer = <T>(\n  state: NodeT<T>,\n  { data, type }: ActionType<T>\n): T => {\n  switch (type) {\n    case 'add':\n      return { ...state, ...data };\n    case 'remove':\n      delete state[data.nodeID];\n      return { ...state };\n    default:\n      throw new Error();\n  }\n};\n\nexport const collectionReducer = <T>(\n  state: CollectionState<T>,\n  { data, type }: ActionType<T>\n): CollectionState<T> => {\n  switch (type) {\n    case 'add':\n      data.forEach((data: NodeT<T>) => {\n        state.collection?.set(data.nodeID, data);\n      });\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'update':\n      state.collection?.set(data.nodeID, data);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    case 'remove':\n      state.collection?.delete(data.nodeID);\n      return {\n        ...state,\n        collection: state.collection,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const useSafeReducer = <T>(\n  reducer: any,\n  initialState: T\n): [T, Function] => {\n  const [state, dispatch] = useReducer<React.Reducer<T, ActionType<T>>>(\n    reducer,\n    initialState\n  );\n  const isMounted = useIsMounted();\n\n  function safeDispatch(args: ActionType<T>) {\n    if (isMounted.current) {\n      dispatch(args);\n    }\n  }\n\n  return [state, safeDispatch];\n};\n\nexport const useGun = (Gun: GunStatic, opts: GunOptions) => {\n  const [gun, setGun] = useState(Gun({ ...opts }));\n\n  useEffect(() => {\n    if (opts) {\n      setGun(Gun({ ...opts }));\n    }\n  }, [Gun, opts]);\n\n  return gun;\n};\n\nexport const useGunNamespace = (gun: GunRef, soul?: string) => {\n  const [namespace, setNamespace] = useState(\n    soul ? gun.user(soul) : gun.user()\n  );\n  useEffect(() => {\n    if (gun && !namespace) {\n      setNamespace(soul ? gun.user(soul) : gun.user());\n    }\n  }, [namespace, gun, soul]);\n  return namespace;\n};\n\nexport const useGunKeyAuth = (\n  gun: GunRef,\n  keys: KeyPair,\n  triggerAuth: boolean = true\n) => {\n  // Will attempt to perform a login (when triggerAuth is set to true),\n  // or, if false, returns a namespaced gun node\n  const namespacedGraph = useGunNamespace(gun);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  gun.on('auth', () => {\n    setIsLoggedIn(true);\n  });\n\n  useEffect(() => {\n    if (namespacedGraph && !namespacedGraph.is && keys && triggerAuth) {\n      namespacedGraph.auth(keys);\n    }\n  }, [triggerAuth, namespacedGraph, keys]);\n\n  return [namespacedGraph, isLoggedIn];\n};\n\nexport const useGunKeys = (\n  sea: any,\n  existingKeys?: KeyPair | undefined | null\n) => {\n  const [newKeys, setNewKeys] = useState<KeyPair | undefined | null>(\n    existingKeys\n  );\n\n  useEffect(() => {\n    async function getKeySet() {\n      const pair: KeyPair = await sea.pair();\n      setNewKeys(pair);\n    }\n\n    if (!newKeys && !existingKeys) {\n      getKeySet();\n    }\n\n    if (existingKeys) {\n      setNewKeys(existingKeys);\n    }\n  }, [existingKeys, newKeys, sea]);\n\n  return newKeys;\n};\n\nexport const useGunOnNodeUpdated = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    useOpen: false,\n  },\n  cb: (data: T, nodeID: string) => void,\n  cleanup?: () => void\n) => {\n  const { appKeys, sea, useOpen } = opts;\n  const [gunAppGraph] = useState(ref);\n  const handler = useRef(null);\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const gunCb = async (\n        encryptedField: any,\n        nodeID: string,\n        message: any,\n        event: any\n      ) => {\n        let decryptedField = await decryptData(encryptedField, appKeys, sea);\n        cb(decryptedField, nodeID);\n\n        if (!handler.current) {\n          handler.current = event;\n        }\n      };\n\n      if (useOpen) {\n        if (!gunAppGraph.open) {\n          throw new Error('Please include gun/lib/open.');\n        } else {\n          gunAppGraph.open(gunCb);\n        }\n      } else {\n        gunAppGraph.on(gunCb);\n      }\n    }\n\n    return () => {\n      if (handler.current) {\n        //cleanup gun .on listener\n        handler.current.off();\n      }\n      if (cleanup) {\n        cleanup();\n      }\n    };\n    // We just need to set the listener once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport const useGunState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [fields, dispatch] = useSafeReducer<T>(nodeReducer, {} as T);\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: any) => {\n      dispatch({ type: 'add', data });\n    },\n    'object',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    gunAppGraph,\n    opts,\n    (item: any) => {\n      Object.keys(item).forEach((key) => {\n        let cleanFn = updater({ id: key, data: item[key] });\n        debouncedHandlers.push(cleanFn);\n      });\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with root node fields\n  const put = async (data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(encryptedData, (ack: any) =>\n        ack.err ? reject(ack.err) : resolve(data)\n      )\n    );\n  };\n\n  const remove = async (field: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph.put(null, (ack: any) =>\n        ack.err ? reject(ack.err) : resolve(field)\n      )\n    );\n    dispatch({ type: 'remove', data: { nodeID: field } });\n  };\n\n  return { fields, put, remove };\n};\n\nexport const useGunCollectionState = <T>(\n  ref: GunRef,\n  opts: Options = {\n    appKeys: '',\n    sea: null,\n    interval: 100,\n    useOpen: false,\n  }\n) => {\n  const { appKeys, sea, interval = 100 } = opts;\n  const [gunAppGraph] = useState(ref);\n  const [{ collection }, dispatch] = useSafeReducer<CollectionState<T>>(\n    collectionReducer,\n    {\n      collection: new Map(),\n    }\n  );\n\n  const debouncedHandlers: Function[] = [];\n  const updater = debouncedUpdates(\n    (data: T) => {\n      dispatch({ type: 'add', data });\n    },\n    'map',\n    interval\n  );\n\n  useGunOnNodeUpdated(\n    gunAppGraph.map(),\n    opts,\n    (item: T, nodeID) => {\n      if (item) {\n        let cleanFn = updater({\n          id: nodeID,\n          data: { ...item, nodeID },\n        });\n        debouncedHandlers.push(cleanFn);\n      } else {\n        dispatch({ type: 'remove', data: { nodeID } });\n      }\n    },\n    () => {\n      if (debouncedHandlers.length) {\n        //cleanup timeouts\n        debouncedHandlers.forEach((c) => c());\n      }\n    }\n  );\n\n  // Working with Sets\n\n  const updateInSet = async (nodeID: string, data: T) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n    );\n    dispatch({ type: 'update', data: { nodeID, ...data } });\n  };\n\n  const addToSet = async (data: T, nodeID?: string) => {\n    let encryptedData = await encryptData(data, appKeys, sea);\n    if (!nodeID) {\n      await new Promise((resolve, reject) =>\n        gunAppGraph.set(encryptedData, (ack: any) =>\n          ack.err ? reject(ack.err) : resolve(data)\n        )\n      );\n    } else {\n      await new Promise((resolve, reject) =>\n        gunAppGraph\n          .get(nodeID)\n          .put(encryptedData, (ack: any) =>\n            ack.err ? reject(ack.err) : resolve(data)\n          )\n      );\n    }\n  };\n\n  const removeFromSet = async (nodeID: string) => {\n    await new Promise((resolve, reject) =>\n      gunAppGraph\n        .get(nodeID)\n        .put(null, (ack: any) => (ack.err ? reject(ack.err) : resolve(nodeID)))\n    );\n  };\n\n  return { collection, addToSet, updateInSet, removeFromSet };\n};\n"],"names":["encryptData","data","keys","sea","encrypt","Promise","resolve","decryptData","decrypt","debouncedUpdates","dispatcher","type","timeout","updates","handler","update","push","setTimeout","newStateSlice","reduce","previousState","id","set","Map","clearTimeout","useIsMounted","isMounted","useRef","useEffect","current","nodeReducer","state","nodeID","Error","collectionReducer","forEach","collection","delete","useSafeReducer","reducer","initialState","dispatch","useReducer","safeDispatch","args","useGun","Gun","opts","gun","setGun","useState","useGunNamespace","soul","namespace","setNamespace","user","useGunKeyAuth","triggerAuth","namespacedGraph","isLoggedIn","setIsLoggedIn","on","is","auth","useGunKeys","existingKeys","newKeys","setNewKeys","getKeySet","pair","useGunOnNodeUpdated","ref","appKeys","useOpen","cb","cleanup","gunAppGraph","gunCb","encryptedField","message","event","decryptedField","open","off","useGunState","interval","fields","debouncedHandlers","updater","item","Object","key","cleanFn","length","c","put","encryptedData","reject","ack","err","remove","field","useGunCollectionState","map","updateInSet","get","addToSet","removeFromSet"],"mappings":"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"}